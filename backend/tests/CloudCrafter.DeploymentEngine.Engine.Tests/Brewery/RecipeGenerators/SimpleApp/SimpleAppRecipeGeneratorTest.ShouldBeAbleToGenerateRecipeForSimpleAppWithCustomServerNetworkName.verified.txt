{
  Recipe:
name: My Custom Stack 123
application:
  id: 35223e08-9c9f-4322-972e-51c610c202e3
dockerComposeOptions:
  base64DockerCompose: c2VydmljZXM6CiAgbXktY3VzdG9tLXNlcnZpY2UtMTIzOgogICAgaGVhbHRoY2hlY2s6CiAgICAgIHRlc3Q6IGN1cmwgLWYgaHR0cDovLzEyNy4wLjAuMTozMDAwLwogICAgICBpbnRlcnZhbDogM3MKICAgICAgdGltZW91dDogNHMKICAgICAgcmV0cmllczogMwogICAgICBzdGFydF9wZXJpb2Q6IDNzCiAgICBsYWJlbHM6CiAgICAgIGNsb3VkY3JhZnRlci5tYW5hZ2VkOiB0cnVlCiAgICAgIGNsb3VkY3JhZnRlci5zdGFjay5pZDogMzUyMjNlMDgtOWM5Zi00MzIyLTk3MmUtNTFjNjEwYzIwMmUzCiAgICAgIGNsb3VkY3JhZnRlci5zdGFjay5zZXJ2aWNlLmlkOiBiMzRhNjU2MC03MDFkLTRmMGUtYjAyNC1iNGI3YjIxNTViY2YKICAgICAgY2xvdWRjcmFmdGVyLmRlcGxveW1lbnQ6IGZkZTg1YWE2LThkZDYtNDhjOS04YzRiLTgxNzJhMmYxNWYyOAogICAgICB0cmFlZmlrLmVuYWJsZTogdHJ1ZQogICAgICB0cmFlZmlrLmh0dHAucm91dGVycy5iMzRhNjU2MC03MDFkLTRmMGUtYjAyNC1iNGI3YjIxNTViY2YucnVsZTogSG9zdChgbXktY3VzdG9tLWRvbWFpbi5jb21gKQogICAgICB0cmFlZmlrLmh0dHAucm91dGVycy5iMzRhNjU2MC03MDFkLTRmMGUtYjAyNC1iNGI3YjIxNTViY2YuZW50cnlwb2ludHM6IHdlYgogICAgICB0cmFlZmlrLmh0dHAucm91dGVycy5iMzRhNjU2MC03MDFkLTRmMGUtYjAyNC1iNGI3YjIxNTViY2Yuc2VydmljZTogYjM0YTY1NjAtNzAxZC00ZjBlLWIwMjQtYjRiN2IyMTU1YmNmCiAgICAgIHRyYWVmaWsuaHR0cC5zZXJ2aWNlcy5iMzRhNjU2MC03MDFkLTRmMGUtYjAyNC1iNGI3YjIxNTViY2YubG9hZGJhbGFuY2VyLnNlcnZlci5wb3J0OiAtMQogICAgbmV0d29ya3M6CiAgICAtIG15LWN1c3RvbS1uZXR3b3JrCiAgICBlbnZfZmlsZTogLmVudgogICAgaW1hZ2U6IGIzNGE2NTYwLTcwMWQtNGYwZS1iMDI0LWI0YjdiMjE1NWJjZjpsYXRlc3QKbmV0d29ya3M6CiAgbXktY3VzdG9tLW5ldHdvcms6CiAgICBleHRlcm5hbDogdHJ1ZQo=
  dockerComposeDirectory: /data/cloudcrafter/stacks/35223e08-9c9f-4322-972e-51c610c202e3
destination:
  rootDirectory: /data/cloudcrafter/stacks/35223e08-9c9f-4322-972e-51c610c202e3
  gitCheckoutDirectory: /data/git/cc-fde85aa6-8dd6-48c9-8c4b-8172a2f15f28
buildOptions:
  steps:
  - name: Check if network 'my-custom-network' exists
    description: Validates if the network exists. If it does not, create the network regardless
    type: DockerValidateNetworksExists
    params:
      networks:
      - my-custom-network
  - name: Fetch git repository
    description: Fetches the git repository
    type: FetchPublicGitRepository
    params:
      repo: https://github.com/cloudcrafter-oss/demo-examples
      commit: HEAD
  - name: Write environment variables file to filesystem
    description: Writes the environment variables file to the filesystem
    type: WriteEnvironmentVariablesFileToFilesystem
    params:
      fileName: .env
      fileContents: ''
  - name: Determine Nixpacks buildpack
    description: Determines the Nixpacks buildpack to use for the application
    type: NixpacksDetermineBuildPack
    params:
      path: nixpacks-node-server
  - name: Generate Nixpacks plan
    description: Generates the Nixpacks plan for the application
    type: NixpacksGeneratePlan
    params:
      path: nixpacks-node-server
  - name: Alter Nixpacks build plan
    description: Alters the Nixpacks build plan for the application
    type: NixpacksAlterPlan
    params:
      packages:
      - iputils-ping
      - curl
  - name: Write Nixpacks plan to filesystem
    description: Writes the Nixpacks plan to the filesystem
    type: NixpacksWritePlanToFileSystem
    params:
      path: nixpacks-node-server
  - name: Build Docker image
    description: Builds the Docker image for the application
    type: NixpacksBuildDockerImage
    params:
      path: nixpacks-node-server
      image: b34a6560-701d-4f0e-b024-b4b7b2155bcf
      tag: latest
      disableCache: true
      env: {}
  - name: Write Docker Compose
    description: Writes the Docker Compose file to the filesystem
    type: DockerComposeWriteToFileSystem
    params:
      dockerComposeFile: docker-compose.yml
  - name: Docker Compose Up
    description: Runs docker compose up and stores the service names in a context, if enabled.
    type: DockerComposeUp
    params:
      dockerComposeFile: docker-compose.yml
      storeServiceNames: true
  - name: Stop Containers
    description: Stops containers based on filter
    type: StopContainers
    params:
      filters:
        labels:
        - cloudcrafter.managed=true
        - cloudcrafter.stack.id=35223e08-9c9f-4322-972e-51c610c202e3
        - cloudcrafter.deployment!=fde85aa6-8dd6-48c9-8c4b-8172a2f15f28
      onlyCloudCrafterContainers: true
  - name: Container health check
    description: Checks the health of the containers
    type: ContainerHealthCheck
    params:
      dockerComposeSettings:
        fetchServicesFromContext: true
      services:
        my-custom-service-123:
          httpMethod: GET
          httpSchema: http
          httpHost: 127.0.0.1
          httpPath: /
          httpPort: 3000
          expectedResponseCode: 200
          retries: 3
          checkForDockerHealth: false
,
  DockerCompose:
services:
  my-custom-service-123:
    healthcheck:
      test: curl -f http://127.0.0.1:3000/
      interval: 3s
      timeout: 4s
      retries: 3
      start_period: 3s
    labels:
      cloudcrafter.managed: true
      cloudcrafter.stack.id: 35223e08-9c9f-4322-972e-51c610c202e3
      cloudcrafter.stack.service.id: b34a6560-701d-4f0e-b024-b4b7b2155bcf
      cloudcrafter.deployment: fde85aa6-8dd6-48c9-8c4b-8172a2f15f28
      traefik.enable: true
      traefik.http.routers.b34a6560-701d-4f0e-b024-b4b7b2155bcf.rule: Host(`my-custom-domain.com`)
      traefik.http.routers.b34a6560-701d-4f0e-b024-b4b7b2155bcf.entrypoints: web
      traefik.http.routers.b34a6560-701d-4f0e-b024-b4b7b2155bcf.service: b34a6560-701d-4f0e-b024-b4b7b2155bcf
      traefik.http.services.b34a6560-701d-4f0e-b024-b4b7b2155bcf.loadbalancer.server.port: -1
    networks:
    - my-custom-network
    env_file: .env
    image: b34a6560-701d-4f0e-b024-b4b7b2155bcf:latest
networks:
  my-custom-network:
    external: true

}